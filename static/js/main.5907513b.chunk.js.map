{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","HOC/Auxi.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","contianers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Aux","props","children","Layout","className","styles","content","BurgerIngredient","ingredients","this","type","Styles","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","displayStyle","Component","Burger","console","log","Object","keys","tranformedIngredients","map","igKey","Array","_","index","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","More","controls","BuildControls","control","BurgerBuilder","state","salad","meat","bacon","cheese","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5907513b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3Z2OW\",\"BreadTop\":\"BurgerIngredient_BreadTop__10eF-\",\"Seeds1\":\"BurgerIngredient_Seeds1__M5s2L\",\"Seeds2\":\"BurgerIngredient_Seeds2__6E_M5\",\"Meat\":\"BurgerIngredient_Meat___p9AM\",\"Cheese\":\"BurgerIngredient_Cheese__2YLEA\",\"Salad\":\"BurgerIngredient_Salad__1jb_1\",\"Bacon\":\"BurgerIngredient_Bacon__1eaMb\",\"displayStyle\":\"BurgerIngredient_displayStyle__2PQWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__fI6b9\",\"Label\":\"BuildControl_Label__JiFtF\",\"Less\":\"BuildControl_Less__6fTq2\",\"More\":\"BuildControl_More__1vc7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__181cP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2RmNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__pPg21\"};","import React from 'react';\r\n\r\nconst Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport Aux from \"../../HOC/Auxi\";\r\nimport styles from \"../Layout/Layout.module.css\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n       \r\n            <Aux>\r\n                <div>Toolbar , sidebar , Backdrop</div>\r\n               <main className={styles.content}>\r\n                    {props.children}\r\n                </main>\r\n            </Aux>\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport Styles from \"../BurgerIngredient/BurgerIngredient.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredient extends Component{\r\n\r\n    render(){\r\nlet ingredients = null;\r\n\r\nswitch(this.props.type){\r\n    case ('bread-bottom'): \r\n    ingredients = <div className={Styles.BreadBottom}></div>;\r\n    break;\r\n    case ('bread-top'):\r\n        ingredients = (\r\n            <div className={Styles.BreadTop}>\r\n                <div className={Styles.Seeds1}></div>\r\n                <div className={Styles.Seeds2}></div>\r\n            </div>\r\n        );\r\n        break;\r\n    case ('meat'):\r\n            ingredients = <div className={Styles.Meat}></div>;\r\n            break;\r\n    case ('cheese'):\r\n        ingredients = <div className ={Styles.Cheese}></div> ;\r\n        break;\r\n    case ('salad'):\r\n        ingredients = <div className={Styles.Salad}></div>;\r\n        break;\r\n    case ('bacon'):\r\n        ingredients = <div className={Styles.Bacon}></div>;\r\n        break;    \r\n    default : \r\n        ingredients = null;        \r\n        }\r\n\r\n\r\n    return (\r\n        <div className={Styles.displayStyle}>\r\n            {ingredients}\r\n        </div>\r\n    );\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes ={\r\n    type:PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport Styles from \"../Burger/Burger.module.css\";\r\n\r\nconst Burger = (props) => {\r\n\r\n    console.log(Object.keys(props.ingredients)+\" Object.keys(props.ingredients)\");\r\n    let tranformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n\r\n        return(\r\n            [...Array(props.ingredients[igKey])].map( (_ ,index)=>{\r\n               return <BurgerIngredient key={igKey+index} type={igKey}/>\r\n            })\r\n        )\r\n    })\r\n    .reduce((arr,el)=>{\r\n        return arr.concat(el);\r\n    },[]);\r\n\r\n    if (tranformedIngredients.length === 0){\r\n        tranformedIngredients = <p>Please start adding ingredients !</p>\r\n    }\r\nconsole.log(tranformedIngredients);\r\n    return (\r\n        <div className={Styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n           {tranformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;","import React from 'react';\r\nimport Styles from \"../BuildControl/BuildControl.module.css\"\r\n\r\nconst BuildControl = (props) => {\r\n    return (\r\n        <div className={Styles.BuildControl}>\r\n            <div className={Styles.Label}>{props.label}</div>\r\n            <button className={Styles.Less}>Less</button>\r\n            <button className={Styles.More}>More</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport Styles from \"../BuildControls/BuildControls.module.css\";\r\nimport BuildControl from \"../BuildControls/BuildControl/BuildControl\";\r\n\r\nconst controls=[\r\n    {label:'Salad' , type:'salad'},\r\n    {label:'Meat' , type:'meat'},\r\n    {label:'Cheese' , type:'cheese'},\r\n    {label:'Bacon' , type:'bacon'}\r\n\r\n\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n    return (\r\n        <div className={Styles.BuildControls}>\r\n            {controls.map(control=>(\r\n               <BuildControl key={control.label} label={control.label} />\r\n               )\r\n            )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuildControls;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Aux from \"../../HOC/Auxi\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\n\r\nclass BurgerBuilder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            ingredients:{\r\n                salad:0,\r\n                meat:0,\r\n                bacon:0,\r\n                cheese:0\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const {ingredients} = this.state;\r\n        return (\r\n            <Aux>\r\n                <Burger ingredients={ingredients}/>\r\n                <BuildControls/>\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nBurgerBuilder.propTypes = {\r\n\r\n};\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./contianers/BurgerBuilder/BurgerBuilder\";\nimport Burger from \"./components/Burger/Burger\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  \n\n  render() {\n    return (\n      <div className=\"container\">\n          <Layout>\n            <p>Hello Testing</p>\n            <p><button className=\"btn btn-primary\" >Click</button></p>\n            <BurgerBuilder/>\n           \n            </Layout>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}